// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketSystemDemo.Models;

namespace TicketSystemDemo.Migrations
{
    [DbContext(typeof(TicketSystemContext))]
    partial class TicketSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("TicketSystemDemo.Models.Ticket", b =>
                {
                    b.Property<Guid>("TicketKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsResolve")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Severity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.Property<string>("TicketName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TicketTypeKey")
                        .HasColumnType("TEXT");

                    b.HasKey("TicketKey");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("TicketSystemDemo.Models.TicketAuthority", b =>
                {
                    b.Property<Guid>("TicketAuthorityKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdd")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsResolve")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserTypeKey")
                        .HasColumnType("TEXT");

                    b.HasKey("TicketAuthorityKey");

                    b.ToTable("TicketAuthority");

                    b.HasData(
                        new
                        {
                            TicketAuthorityKey = new Guid("d46de679-d260-41cb-9f94-8c070a4f7966"),
                            IsAdd = true,
                            IsDel = true,
                            IsResolve = true,
                            IsUpdate = true,
                            UserTypeKey = new Guid("15b65d1f-b1a4-4b68-b562-f2dad9882007")
                        },
                        new
                        {
                            TicketAuthorityKey = new Guid("19af6d13-c5e2-4aad-8f0c-176b7b0235a4"),
                            IsAdd = false,
                            IsDel = false,
                            IsResolve = true,
                            IsUpdate = false,
                            UserTypeKey = new Guid("8d5e5e67-6c1f-4379-bba2-ee0436253d85")
                        });
                });

            modelBuilder.Entity("TicketSystemDemo.Models.TicketType", b =>
                {
                    b.Property<Guid>("TicketTypeKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ReadOnly")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ResolveOnly")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TicketTypeName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserTypeKey")
                        .HasColumnType("TEXT");

                    b.HasKey("TicketTypeKey");

                    b.ToTable("TicketType");

                    b.HasData(
                        new
                        {
                            TicketTypeKey = new Guid("146c4440-62e1-4aba-b120-f061554c57f5"),
                            ReadOnly = false,
                            ResolveOnly = false,
                            TicketTypeName = "Default",
                            UserTypeKey = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            TicketTypeKey = new Guid("f8bc3132-6332-4b58-afe9-1f9649ed3a6d"),
                            ReadOnly = false,
                            ResolveOnly = true,
                            TicketTypeName = "Feature Request",
                            UserTypeKey = new Guid("76226cc0-20d3-4004-90e9-5f34dd5aef24")
                        },
                        new
                        {
                            TicketTypeKey = new Guid("91741c42-3e16-4c16-97e5-7e31dbef8b83"),
                            ReadOnly = true,
                            ResolveOnly = false,
                            TicketTypeName = "Test Case",
                            UserTypeKey = new Guid("15b65d1f-b1a4-4b68-b562-f2dad9882007")
                        });
                });

            modelBuilder.Entity("TicketSystemDemo.Models.User", b =>
                {
                    b.Property<Guid>("Userkey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserTypeKey")
                        .HasColumnType("TEXT");

                    b.HasKey("Userkey");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Userkey = new Guid("cc96a024-e68b-4682-a6b2-c11632b197fd"),
                            UserName = "QA User",
                            UserTypeKey = new Guid("15b65d1f-b1a4-4b68-b562-f2dad9882007")
                        },
                        new
                        {
                            Userkey = new Guid("52dba8a3-89d7-4e89-9644-faa6cb012fa7"),
                            UserName = "RD User",
                            UserTypeKey = new Guid("8d5e5e67-6c1f-4379-bba2-ee0436253d85")
                        },
                        new
                        {
                            Userkey = new Guid("c22224c6-cb86-46bc-954c-dea23291f65d"),
                            UserName = "PM User",
                            UserTypeKey = new Guid("76226cc0-20d3-4004-90e9-5f34dd5aef24")
                        },
                        new
                        {
                            Userkey = new Guid("0b87b103-c317-4be1-bc77-bfbda650f44a"),
                            UserName = "Admin",
                            UserTypeKey = new Guid("cbea8e8f-8b9f-48b5-a7d3-40c9be502fd8")
                        });
                });

            modelBuilder.Entity("TicketSystemDemo.Models.UserType", b =>
                {
                    b.Property<Guid>("UserTypeKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserTypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserTypeKey");

                    b.ToTable("UserType");

                    b.HasData(
                        new
                        {
                            UserTypeKey = new Guid("15b65d1f-b1a4-4b68-b562-f2dad9882007"),
                            UserTypeName = "QA"
                        },
                        new
                        {
                            UserTypeKey = new Guid("8d5e5e67-6c1f-4379-bba2-ee0436253d85"),
                            UserTypeName = "RD"
                        },
                        new
                        {
                            UserTypeKey = new Guid("76226cc0-20d3-4004-90e9-5f34dd5aef24"),
                            UserTypeName = "PM"
                        },
                        new
                        {
                            UserTypeKey = new Guid("cbea8e8f-8b9f-48b5-a7d3-40c9be502fd8"),
                            UserTypeName = "ADMIN"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
